#!/bin/bash

set -e

readonly COMMANDS=(showthemes enabletheme disabletheme install uninstall help)
readonly USAGE="Usage: $(IFS=\|;echo "${COMMANDS[*]}")"
readonly THEMES=(dracula solarized)
readonly INSTALLED_DEFAULT_EL='/usr/local/share/emacs/site-lisp/default.el'
readonly ACTIVE_THEME_DIR='/etc/emacs-extras/active-theme'

function showactivetheme() {
  active_theme_file="$(ls ${ACTIVE_THEME_DIR})"
  if [[ -z "${active_theme_file}" ]]; then
    echo ""
    return
  fi

  if [[ -f "${ACTIVE_THEME_DIR}/${active_theme_file}" ]]; then
    active_theme=${active_theme_file%.el}
    echo "${active_theme}"
    return
  else
    >&2 echo "Error: Misconfiguration detected! Please re-install emacs-extras."
    exit 1
  fi
}

function showthemes() {
  active_theme="$(showactivetheme)"
  if [[ ! -z "${active_theme}" ]]; then
    echo "${active_theme} (active)"
  fi

  for theme in "${THEMES[@]}"; do
    [[ "${theme}" != "${active_theme}" ]] && echo "${theme}"
  done
}

function enabletheme() {
  if [[ -z "${2}" ]]; then
    >&2 echo "Error: No theme specified. Use 'showthemes' to get a list of installed themes."
    exit 1
  fi

  for theme in "${THEMES[@]}"; do
    if [[ "${2}" == "${theme}" ]]; then
      rm -f "${ACTIVE_THEME_DIR}"/*
      echo -e "(load-theme '${theme} t)" > ${ACTIVE_THEME_DIR}/${theme}.el
      echo "${theme} enabled. Restart emacs for changes to take effect."
      return
    fi
  done

  >&2 echo "Error: Theme ${2} not recognized. Use 'showthemes' to get a list of installed themes."
  exit 1
}

function disabletheme() {
  active_theme="$(showactivetheme)"
  if [[ -z "${active_theme}" ]]; then
    >&2 echo 'Error: No theme is currently active.'
    exit 1
  fi

  rm "${ACTIVE_THEME_DIR}/${active_theme}.el"
  echo "${active_theme} deactivated. Restart emacs for changes to take effect."
}

function install() {
  if [[ -e "${INSTALLED_DEFAULT_EL}" ]]; then
    echo "File already exists: ${INSTALLED_DEFAULT_EL}"
   exit 1
  fi

  ln -s /etc/emacs-extras/default.el "${INSTALLED_DEFAULT_EL}"
  mkdir -p "${ACTIVE_THEME_DIR}"
}

function uninstall() {
  if [[ -L "${INSTALLED_DEFAULT_EL}" ]]; then
    rm "${INSTALLED_DEFAULT_EL}"
  fi

  rm -rf "${ACTIVE_THEME_DIR}"
}

function help() {
  echo "${USAGE}"
}

for command in "${COMMANDS[@]}"; do
  if [[ "${1}" == "${command}" ]]; then
    "${command}" $@
    exit 0
  fi
done

echo "${USAGE}"
exit 1
